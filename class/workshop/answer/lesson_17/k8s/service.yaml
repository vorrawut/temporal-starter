apiVersion: v1
kind: Service
metadata:
  name: temporal-worker-service
  namespace: temporal-system
  labels:
    app: temporal-worker
    component: service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: temporal-worker

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: temporal-worker
  namespace: temporal-system
  labels:
    app: temporal-worker
    component: serviceaccount

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: temporal-system
  name: temporal-worker-role
  labels:
    app: temporal-worker
    component: rbac
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: temporal-worker-rolebinding
  namespace: temporal-system
  labels:
    app: temporal-worker
    component: rbac
subjects:
- kind: ServiceAccount
  name: temporal-worker
  namespace: temporal-system
roleRef:
  kind: Role
  name: temporal-worker-role
  apiGroup: rbac.authorization.k8s.io 